/*****************************************************************************
*************
*FILENAME: WATER_CONTROLLER_FREERTOS.C
*
*DESCRIPTION: THIS FILE CONTAINS ALL THE CODE
NEEDED TO IMPLEMENT
* A WATER LEVEL CONTROLLER. FREERTOS
LIBRARIES WILL
* BE USED FOR THIS. VARIOUS TASKS WILL BE
IMPLEMENTED
* TO CARRY OUT THE PROCESS.
*REVISION HISTORY:
*
* REVISION DATE DESCRIPTION
* ---------------------------------------------------------------------------------
* 1.0 27 JUN 2019 INITIAL CREATION

*
* 1.1 4 JUL 2019 CREATED TASK
VLCDTASK
*
* 1.2 8 JUL 2019 CREATED INFINITE
LOOP
* FOR TASK TO RUN
*
*

******************************************************************************
************
*/
//=============================================
============================================

/*INCLUDEING ALL THE NEEDED HEADER FILES*/
#INCLUDE <ARDUINO_FREERTOS.H>
#INCLUDE <CROUTINE.H>
#INCLUDE <EVENT_GROUPS.H>
#INCLUDE <FREERTOSCONFIG.H>

#INCLUDE <FREERTOSVARIANT.H>
#INCLUDE <LIST.H>
#INCLUDE <MESSAGE_BUFFER.H>
#INCLUDE <MPU_WRAPPERS.H>
#INCLUDE <PORTABLE.H>
#INCLUDE <PORTMACRO.H>
#INCLUDE <PROJDEFS.H>
#INCLUDE <QUEUE.H>
#INCLUDE <SEMPHR.H>
#INCLUDE <STACK_MACROS.H>
#INCLUDE <STREAM_BUFFER.H>
#INCLUDE <TASK.H>
#INCLUDE <TIMERS.H>
// THE ABOVE LIBRARIES ARE FREERTOS LIBRARIES
#INCLUDE<LIQUIDCRYSTAL.H> //LIBRARIES THAT INCLUDE
THE VARIOUS LIQUID CRYSTAL FUNCTIONS

//=============================================
===========================================
LIQUIDCRYSTAL LCD(12,11,5,4,3,2);/* DEFINING THE PINS
OF THE ARDUINO TO BE CONNECTED TO

THE LCD (D5,D4,GND,RS,V0,VDD)*/
//=============================================
===========================================
#DEFINE ECHOPIN 9 //ECHO PIN/ OUTPUT PIN
#DEFINE TRIGPIN 8 //TRIGGER PIN/ INPUT PIN
//=============================================
===========================================
INT MAXIMUMRANGE = 50;
LONG DURATION, DIST_CM;

//=============================================
===========================================
//CREATING THE TASK
XTASKCREATE (
VLCDTASK
, (CONST PORTSHORT *)"DISPLAY" // NAME FOR
UNDERSTANDING PURPOSES
, 128 //STACK SIZE
, NULL
, 3 //PRIORITY(3 IS THE HIGHEST 0 IS THE
LOWEST)

, NULL )

//=============================================
===========================================

//=============================================
==============================================
===============
//CODE BLOCK
STATIC VOID VLCDTASK(VOID *PVPARAMETERS); //SETUP
PARAMETERS OF LCD USING TASK
{
LCD.BEGIN(16,2); //INDICATES THE BEGINNING OF LCD
DISPLAY (WIDTH AND HEIGHT RESPECTIVELY)

SERIAL.BEGIN(9600); //FOR COMMUNICATING WITH THE
SERIAL MONITOR AT 9600 BITS PER SECOND(BAUD RATE)

PINMODE (TRIGPIN, OUTPUT); //SETS THE TRIGGER
PIN(PIN 8 OF ARDUINO) TO OUTPUT

PINMODE (ECHOPIN, INPUT); //SETS THE ECHO PIN(PIN 9 OF
ARDUINO) TO OUTPUT

PINMODE (4, OUTPUT);
PINMODE (13,OUTPUT); //OUTPUT WILL BE TAKEN AT
PINS 4 AND 13 OF THE ARDUINO

}
//=============================================
==============================================
================

//=============================================
==============================================
================
//START OF LOOP
FOR(;;) //TASK THAT SHALL NEVER RETURN OR EXIT
{
DIGITALWRITE(TRIGPIN,LOW); //SETS TRIGGER PIN TO
LOW

VTASKDELAY(2000/PORTTICK_PERIOD_MS); //WAITS FOR
2 SECONDS

DIGITALWRITE(TRIGPIN,HIGH); //SETS TRIGGER PIN TO
HIGH

VTASKDELAY(10000/PORTTICK_PERIOD_MS); //WAITS
FOR 10 SECONDS

DURATION=PULSEIN (ECHOPIN,HIGH); /*PULSEIN IS USED
FOR CALCULATING THE DURATION OF A PULSE WHEN IT IS
HIGH
BEFORE IT BECOMES LOW AND VICE
VERSA*/

DIST_CM= DURATION*0.034/2;/*DISTANCE IS CALCULATED
BY MULTIPLYING THE TIME TAKEN TO THE SPEED OF SOUND
IN CM/S DIVIDED BY 2 BECAUSE OF THE
REFLECTION OF THE WAVE MAKING THE DISTANCE
DOUBLE*/

VTASKDELAY(50/PORTTICK_PERIOD_MS); //WAITS FOR
50MS

SERIAL.PRINTLN(DIST_CM); //PRINTS DISTANCE IN
CENTIMETRES ON SERIAL MONITOR

PRVLCDCLEAR( VOID ); //CLEARS THE LCD

VOID PRVLCDGOTOROW( UNSIGNED PORTSHORT 0 );
//MOVES TO FIRST ROW OF LCD

STATIC VOID PRVLCDPUTSTRING( PORTCHAR
*PCSTRING)"WATER_LEVEL"; //WRITE A STRING OF TEXT
TO THE LCD.

PVRLCDPUTSTRING(DIST_CM); //PRINTS DISTANCE IN
CENTIMETRES ON LCD SCREEN

} // END OF LOOP

IF (DIST_CM <= 6 )
{
DIGITALWRITE (13,HIGH); // CONNECT TO RELAY(MOTOR)

DIGITALWRITE (7,HIGH);

PRVLCDGOTOROW(UNSIGNED PORTSHORT 1); //MOVES
DISPLAY TO SECOND ROW OF LCD

PVRLCDPUTSTRING("TANK IS FULL");
}

ELSE IF (DIST_CM>=13)
{
DIGITALWRITE (7,LOW); // CONNECT TO
RELAY(MOTOR)

DIGITALWRITE (13,LOW);

PRVLCDGOTOROW(UNSIGNED PORTSHORT 1); //MOVES
DISPLAY TO SECOND ROW OF LCD

PVRLCDPUTSTRING("MOTOR HAS STARTED");
}
//=============================================
==============================================
==================
